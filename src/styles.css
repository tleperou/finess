body {
  --finess-sidebar-inline-size: clamp(
    var(--inline-size-1),
    35vw,
    var(--inline-size-2)
  );
  --finess-toc-inline-size: var(--inline-size-2);
}

*:focus-visible {
  transition: scale ease-out var(--transition-duration-2);
  transition-timing-function: var(--transition-duration-3);
  outline: var(--border-width-2) solid var(--color-accent-5);
  scale: 1.01;
}

/* overrides of starlight styles */

h1,
h2,
h3 {
  @media (--breakpoint-sm-b-avove) {
    color: var(--color-on-surface-1);
    padding-block: var(--padding-block-1);
  }
}

html,
body {
  font-family: var(--font-family-sans);
  font-size: var(--font-space-1);
  font-weight: var(--font-weight-1);
  font-size: var(--font-size-1);
  line-height: var(--line-height-1);
  color: var(--color-on-surface-1);
  background-color: var(--color-surface-1);
}

/* 
 * @TODO expressive code breaks the inline layout
 * structure causing horisontal scroll despite
 * having a max-inline-size already set onto the 
 * main parent container. 
 */
.expressive-code {
  max-inline-size: var(--max-inline-size, auto);

  @media (--breakpoint-md-only) {
    font-size: var(--font-size-1);
    --max-inline-size: calc(
      100dvw -
        (var(--finess-sidebar-inline-size) + 2 * var(--padding-inline-2) + 6px)
    );
  }

  @media (--breakpoint-md-n-above) {
    --max-inline-size: calc(
      100dvw - var(--finess-sidebar-inline-size) - var(--finess-toc-inline-size)
    );
  }
}

/* finess */

main {
  --sidebars-inline-size: calc(
    var(--finess-sidebar-inline-size) + var(--finess-sidebar-inline-size)
  );

  @media (--breakpoint-sm-only) {
    max-inline-size: calc(100vw - var(--finess-sidebar-inline-size));
  }

  @media (--breakpoint-lg-only) {
    max-inline-size: calc(100vw - var(--sidebars-inline-size));
  }
}

main h2 {
  margin-block-start: var(--margin-block-3);

  @media (--md-n-above) {
    margin-block-start: var(--margin-block-4);
  }

  & + :is(p, blockquote) {
    margin-block-end: var(--margin-block-2);
    margin-block-start: var(--margin-block-3);
    color: var(--color-on-surface-2);
  }
}

main h3 {
  margin-block-start: var(--margin-block-2);
  margin-block-end: var(--margin-block-2);

  @media (--md-n-above) {
    margin-block-start: var(--margin-block-3);
  }
}

main h4 {
  margin-block-start: var(--margin-block-2);
  margin-block-end: var(--margin-block-2);
}

main :is(p, aside, blockquote) + details {
  margin-block-start: var(--margin-block-3);

  & + h4 {
    margin-block-start: var(--margin-block-3);
  }
}

main .expressive-code {
  margin-block-start: var(--margin-block-1);

  @media (--breakpoint-sm-only) {
    & + h3 {
      margin-block-start: var(--margin-block-3);
    }
  }
}

main :is(p, blockquote):has(+ details, + aside) {
  color: var(--color-on-surface-2);
}

main code {
  --space-multiplier: 0.5;

  font-family: var(--font-family-mono);
  background-color: var(--color-surface-2);
  padding-inline: var(--padding-inline-1);
  padding-block: var(--padding-block-1);
  border-radius: var(--border-radius-1);
  mix-blend-mode: screen;

  @media (--light) {
    mix-blend-mode: darken;
  }
}

main aside {
  display: flex;
  column-gap: var(--column-gap-2);
  margin-block-start: var(--margin-block-3);
  padding: var(--padding-2);
  background-color: var(--color-neutral-1);
  border-inline-start: var(--border-width-3) solid var(--color-neutral-3);
  border-radius: var(--border-radius-1);
  color: var(--color-on-neutral-1);
  line-height: var(--line-height-1);

  &::before {
    content: '';
    block-size: 32px;
    inline-size: auto;
    aspect-ratio: var(--aspect-ratio-square);
    mask: var(--icon-dstar-32-filled);
    background-color: var(--color-on-neutral-2);
    margin-block: auto;
  }

  @media (--breakpoint-sm-only) {
    display: block;

    &::before {
      display: block;
      position: absolute;
      margin-block-start: -0.35em;
      margin-inline-start: -0.5em;
    }

    & > p {
      text-indent: 2.15em;
    }
  }
}

/* custom details */

main details {
  transition: scale ease-out var(--transition-duration-2);

  &[open] > * {
    transition-timing-function: var(--transition-duration-3);
    scale: 1.015;
  }

  &:has(:where(summary.sr-only)) {
    border-block-start-color: transparent;
    border-block-end: var(--border-width-1) solid var(--color-surface-2);
  }

  &:has(+ details) {
    border-block-end-color: var(--color-surface-3);
  }

  &:not([open]):hover > * {
    scale: 1.01;
  }

  & + details {
    border-block-start-color: transparent;
  }
}

main ul li {
  display: grid;
  align-items: center;
  grid-template-columns: auto 1fr;
  column-gap: var(--column-gap-2);
  color: var(--color-on-surface-1);
  transition: scale ease-out var(--transition-duration-3),
    border-radius linear var(--transition-duration-2);
  position: relative;
  border-radius: var(--border-radius-4);

  &:hover {
    background-color: var(--color-surface-2);
    border-radius: var(--border-radius-2);
  }

  & span:where(:last-of-type) {
    color: var(--color-on-surface-2);
    margin-inline-start: auto;
    max-inline-size: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    &:not([dir]) {
      /* shrink the begining of the line */
      direction: rtl;
      margin-inline-end: auto;
      margin-inline-start: initial;
    }
  }

  &:hover {
    scale: 1.01;
  }

  &::after {
    content: '';
    position: absolute;
    block-size: 1px;
    width: 100%;
    top: 0;
    background-color: var(--color-surface-2);
  }

  &:hover::after,
  &:hover + li::after {
    content: none;
  }
}

main details :where(summary, li) {
  padding-inline: var(--padding-inline-1);
  padding-block: var(--padding-block-1);
  line-height: var(--line-height-1);
}

main details :is(p, blockquote) {
  padding: var(--padding-block-2) var(--padding-inline-1);
  color: var(--color-on-surface-2);
}
