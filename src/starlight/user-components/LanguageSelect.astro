---
import config from 'virtual:starlight/user-config'
import { localizedUrl } from '../utils/localizedUrl'
import type { Props } from '@astrojs/starlight/props'

const { labels } = Astro.props
---

{
  config.isMultilingual && (
    <select-lang aria-label={labels['languageSelect.accessibleLabel']}>
      <select>
        {Object.entries(config.locales).map(([code, locale]) => (
          <option
            value={localizedUrl(Astro.url, code).pathname}
            selected={code === Astro.props.locale}
          >
            {/* @ts-expect-error lack's lack of type */}
            {locale!.label}
          </option>
        ))}
      </select>
    </select-lang>
  )
}

<script>
  customElements.define(
    'select-lang',
    class SelectLang extends HTMLElement {
      constructor() {
        super()
        this.querySelector('select')!.addEventListener('change', e => {
          if (e.currentTarget instanceof HTMLSelectElement) {
            window.location.pathname = e.currentTarget.value
          }
        })
      }
    }
  )
</script>
