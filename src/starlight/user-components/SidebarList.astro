---
interface Link {
  type: 'link'
  label: string
  href: string
  isCurrent: boolean
  badge: unknown | undefined
  attrs: Record<string, string | number | boolean | undefined>
}

interface Group {
  type: 'group'
  label: string
  entries: (Link | Group)[]
  collapsed: boolean
  badge: unknown | undefined
}

type SidebarEntry = Link | Group

interface Props {
  sidebar: SidebarEntry[] | any[]
  nested?: boolean
}

const { sidebar, nested } = Astro.props
---

<ul>
  {
    sidebar.map(entry => (
      <>
        {entry.type === 'link' ? (
          <li>
            <a
              href={entry.href}
              aria-current={entry.isCurrent && 'page'}
              class:list={[{ large: !nested }, entry.attrs.class]}
              {...entry.attrs}
            >
              {entry.label}
              {entry.badge && <> (badge)</>}
            </a>
          </li>
        ) : (
          <>
            <li role="separator">
              <hr />
            </li>
            <li>
              <details open>
                <summary>
                  {entry.label}
                  {entry.badge && <>(badge)</>}
                </summary>
                <Astro.self
                  sidebar={entry.entries}
                  nested
                />
              </details>
            </li>
          </>
        )}
      </>
    ))
  }
</ul>
